<?xml version="1.0" encoding="UTF-8"?>
<project name="AsoBrain 3D Toolkit" default="release">
	<property file="build.properties"/>
	<property file="../build.properties"/>
	<property file="../../build.properties"/>
	<property file="${build.properties}"/>
	<property name="build.sysclasspath" value="ignore"/>

	<include file="build-pack200.xml"/>

	<target name="clean" depends="init" description="Remove temporary build files">
		<delete dir="classes"/>
		<delete dir="lib" includes="*.jar"/>
		<delete dir="test-report"/>
		<delete file="ab3d-test.jar"/>
	</target>

	<target name="build" depends="compile-java,compile-examples,compile-tests,jars.uptodate.check" unless="jars.uptodate" description="Build project">
		<mkdir dir="lib"/>
		<jar destfile="lib/ab3d.jar">
			<fileset dir="classes/java"/>
			<fileset dir="images"/>
		</jar>
		<jar destfile="ab3d-test.jar" basedir="classes/test"/>
	</target>

	<target name="jars.uptodate.check" depends="compile-java,compile-tests">
		<condition property="jars.uptodate">
			<and>
				<uptodate>
					<srcfiles dir="classes/java"/>
					<mapper type="merge" to="../../lib/ab3d.jar"/>
				</uptodate>
				<uptodate>
					<srcfiles dir="images"/>
					<mapper type="merge" to="../lib/ab3d.jar"/>
				</uptodate>
				<uptodate>
					<srcfiles dir="." includes="classes/test/**"/>
					<mapper type="merge" to="ab3d-test.jar"/>
				</uptodate>
			</and>
		</condition>
	</target>

	<target name="release" depends="build,pack200.uptodate.check" unless="pack200.uptodate" description="Build release">
		<repack200 jar="lib/ab3d.jar"/>
		<signjar keystore="${asobrain.cert.keystore}" storepass="${asobrain.cert.storepass}" alias="${asobrain.cert.alias}">
			<fileset file="lib/ab3d.jar"/>
			<fileset file="ab3d-test.jar"/>
		</signjar>
		<pack200 jar="lib/ab3d.jar"/>
	</target>

	<target name="pack200.uptodate.check" depends="build">
		<uptodate property="pack200.uptodate">
			<srcfiles dir="." includes="lib/*.jar,bin/*.jar"/>
			<mapper type="glob" from="*.jar" to="*.jar.pack.gz"/>
		</uptodate>
	</target>

	<target name="init">
		<echo message="Project: ${ant.project.name}"/>
		<tstamp/>
		<available property="api.jetbrains.annotations" type="file" file="${jetbrains-annotations.jar}"/>
		<available property="api.jogl" type="file" file="lib/jogl1/jogl.jar"/>
		<available property="api.junit" type="file" file="${junit.jar}"/>
		<available property="api.kxml" type="file" file="${kxml.jar}"/>
	</target>

	<target name="api-check" depends="init" description="Pre-compilation initialization">
		<fail unless="api.jetbrains.annotations" message="Please check 'JetBrains annotations' library presence and 'build.properties' file."/>
		<fail unless="api.jogl" message="Please check 'JOGL' library presence and 'build.properties' file."/>
		<fail unless="api.junit" message="Please check 'JUnit' library presence and 'build.properties' file."/>
		<fail unless="api.kxml" message="Please check 'KXML' library presence and 'build.properties' file."/>
	</target>

	<path id="idea.lib.path">
		<pathelement location="${jetbrains-annotations.jar}"/>
		<pathelement location="${asm.jar}"/>
		<pathelement location="${asm-commons.jar}"/>
	</path>

	<path id="java.classpath">
		<pathelement location="classes/java"/>
		<pathelement location="${java.home}/lib/rt.jar"/>
		<pathelement location="${jetbrains-annotations.jar}"/>
		<pathelement location="lib/jogl1/jogl.jar"/>
		<pathelement location="lib/jogl1/gluegen-rt.jar"/>
		<pathelement location="${junit.jar}"/>
		<pathelement location="${kxml.jar}"/>
	</path>

	<target name="compile-java" depends="api-check,java.uptodate.check" unless="java.uptodate" description="Compile Java source files">
		<mkdir dir="classes/java"/>
		<javac srcdir="java" destdir="classes/java" includeantruntime="false" classpathref="java.classpath" source="1.5" target="1.5">
			<exclude name="**/jogl?*/**"/>
			<exclude name="**/java3d/**"/>
		</javac>
		<copy todir="classes/java" preservelastmodified="true">
			<fileset dir="java" excludes="**/*.java"/>
		</copy>
	</target>

	<target name="java.uptodate.check">
		<condition property="java.uptodate">
			<and>
				<uptodate>
					<srcfiles dir="." includes="java/**/*.java" excludes="**/jogl?*/**,**/java3d/**"/>
					<mapper type="glob" from="*.java" to="classes/*.class"/>
				</uptodate>
				<uptodate>
					<srcfiles dir="." includes="java/**" excludes="**/*.java"/>
					<mapper type="glob" from="*" to="classes/*"/>
				</uptodate>
			</and>
		</condition>
	</target>

	<target name="compile-examples" depends="compile-java,examples.uptodate.check" unless="examples.uptodate" description="Compile examples">
		<mkdir dir="classes/examples"/>
		<javac srcdir="examples" destdir="classes/examples" includeantruntime="false" classpathref="java.classpath" source="1.5" target="1.5"/>
		<copy todir="classes/examples" preservelastmodified="true">
			<fileset dir="examples" excludes="**/*.java"/>
		</copy>
	</target>

	<target name="examples.uptodate.check">
		<condition property="examples.uptodate">
			<and>
				<uptodate>
					<srcfiles dir="." includes="examples/**/*.java"/>
					<mapper type="glob" from="*.java" to="classes/*.class"/>
				</uptodate>
				<uptodate>
					<srcfiles dir="." includes="examples/**" excludes="**/*.java"/>
					<mapper type="glob" from="*" to="classes/*"/>
				</uptodate>
			</and>
		</condition>
	</target>

	<path id="test.classpath">
		<pathelement location="classes/test"/>
		<pathelement location="images"/>
		<path refid="java.classpath"/>
	</path>

	<target name="compile-tests" depends="compile-java,tests.uptodate.check" unless="tests.uptodate" description="Compile unit tests">
		<mkdir dir="classes/test"/>
		<javac srcdir="test" destdir="classes/test" includeantruntime="false" classpathref="test.classpath" source="1.5" target="1.5">
			<exclude name="**/jogl?*/**"/>
			<exclude name="**/java3d/**"/>
		</javac>
		<copy todir="classes/test" preservelastmodified="true">
			<fileset dir="test" excludes="**/*.java"/>
		</copy>
	</target>

	<target name="tests.uptodate.check">
		<condition property="tests.uptodate">
			<and>
				<uptodate>
					<srcfiles dir="." includes="test/**/*.java" excludes="**/jogl?*/**,**/java3d/**"/>
					<mapper type="glob" from="*.java" to="classes/*.class"/>
				</uptodate>
				<uptodate>
					<srcfiles dir="." includes="test/**" excludes="**/*.java"/>
					<mapper type="glob" from="*" to="classes/*"/>
				</uptodate>
			</and>
		</condition>
	</target>

	<target name="test" depends="run-tests" if="test.failed">
		<echo message="true" file="test-report/failed"/>
		<fail message="Unit test(s) failed. See report: ${basedir}/test-report/index.html"/>
	</target>

	<target name="run-tests" depends="compile-tests" description="Execute unit tests">
		<delete dir="test-report"/>
		<mkdir dir="test-report"/>
		<junit fork="yes" forkmode="once" showoutput="true" errorproperty="test.failed" failureproperty="test.failed">
			<classpath refid="test.classpath"/>
			<test todir="test-report" name="${testcase}" if="testcase"/>
			<batchtest todir="test-report" unless="testcase">
				<fileset dir="classes/test">
					<include name="**/Test*.class"/>
					<exclude name="**/*$*"/>
				</fileset>
			</batchtest>
			<formatter type="xml"/>
		</junit>
		<junitreport todir="test-report">
			<fileset dir="test-report">
				<include name="TEST-*.xml"/>
			</fileset>
			<report format="frames" todir="test-report"/>
		</junitreport>
	</target>

	<target name="resign-jogl1">
		<macrodef name="resign">
			<attribute name="jar"/>
			<sequential>
				<jar destfile="@{jar}_resigned.jar">
					<zipfileset src="@{jar}" excludes="META-INF/**"/>
				</jar>
				<repack200 jar="@{jar}_resigned.jar"/>
				<signjar jar="@{jar}_resigned.jar" keystore="${asobrain.cert.keystore}" storepass="${asobrain.cert.storepass}" alias="${asobrain.cert.alias}"/>
				<pack200 jar="@{jar}_resigned.jar"/>
				<move file="@{jar}_resigned.jar.pack.gz" tofile="@{jar}.pack.gz"/>
				<move file="@{jar}_resigned.jar" tofile="@{jar}"/>
			</sequential>
		</macrodef>
		<resign jar="lib/jogl1/gluegen-rt-natives-linux-amd64.jar"/>
		<resign jar="lib/jogl1/gluegen-rt-natives-linux-i586.jar"/>
		<resign jar="lib/jogl1/gluegen-rt-natives-macosx-ppc.jar"/>
		<resign jar="lib/jogl1/gluegen-rt-natives-macosx-universal.jar"/>
		<resign jar="lib/jogl1/gluegen-rt-natives-solaris-amd64.jar"/>
		<resign jar="lib/jogl1/gluegen-rt-natives-solaris-i586.jar"/>
		<resign jar="lib/jogl1/gluegen-rt-natives-solaris-sparc.jar"/>
		<resign jar="lib/jogl1/gluegen-rt-natives-solaris-sparcv9.jar"/>
		<resign jar="lib/jogl1/gluegen-rt-natives-windows-amd64.jar"/>
		<resign jar="lib/jogl1/gluegen-rt-natives-windows-i586.jar"/>
		<resign jar="lib/jogl1/gluegen-rt.jar"/>
		<resign jar="lib/jogl1/jogl-demos.jar"/>
		<resign jar="lib/jogl1/jogl-natives-linux-amd64.jar"/>
		<resign jar="lib/jogl1/jogl-natives-linux-i586.jar"/>
		<resign jar="lib/jogl1/jogl-natives-macosx-ppc.jar"/>
		<resign jar="lib/jogl1/jogl-natives-macosx-universal.jar"/>
		<resign jar="lib/jogl1/jogl-natives-solaris-amd64.jar"/>
		<resign jar="lib/jogl1/jogl-natives-solaris-i586.jar"/>
		<resign jar="lib/jogl1/jogl-natives-solaris-sparc.jar"/>
		<resign jar="lib/jogl1/jogl-natives-solaris-sparcv9.jar"/>
		<resign jar="lib/jogl1/jogl-natives-windows-amd64.jar"/>
		<resign jar="lib/jogl1/jogl-natives-windows-i586.jar"/>
		<resign jar="lib/jogl1/jogl.jar"/>
	</target>

</project>
